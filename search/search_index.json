{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Cashu-Docs","text":"<p>This website is a gentle introduction to Cashu for developers. On the following pages you will find code examples for typical Cashu operations utilizing different programming languages and Cashu libraries</p>"},{"location":"mint/","title":"Mint a token","text":"<p>Minting is the process of exchanging some payment for a mint's token. This is a two step-process:</p> <ol> <li> <p>Alices requests a mint, specifying the amount, the unit and the payment method. If the request is valid the mint returns a quote and a payment request.</p> </li> <li> <p>Once the payment is made, Alice can send the quote ID, as well as outputs to be signed in a second request to \"mint\" a token.</p> </li> </ol> <p>Most of the complexity (especially around the cryptography involved) is hidden by Cashu libraries. Down below you can find some examples written using most common libraries.</p> Cashu-TS <pre><code>import { CashuMint, CashuWallet, MintQuoteState } from \"@cashu/cashu-ts\";\nconst mintUrl = \"http://localhost:3338\";\nconst mint = new CashuMint(mintUrl);\nconst wallet = new CashuWallet(mint);\nconst mintQuote = await wallet.createMintQuote(64);\nconst interval = setInterval(async () =&gt; {\n  const mintQuoteChecked = await wallet.checkMintQuote(mintQuote.quote);\n  if (mintQuoteChecked.state == MintQuoteState.PAID) {\n    clearInterval(interval);\n    const { proofs } = await wallet.mintTokens(64, mintQuote.quote);\n  }\n}, 10000);\n</code></pre>"}]}